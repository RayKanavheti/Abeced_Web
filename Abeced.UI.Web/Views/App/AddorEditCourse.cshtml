@model Abeced.UI.Web.Models.CourseModel

@{
    ViewBag.Title = "AddorEditCourse";
}

<h2>Add Course </h2>


@using (Html.BeginForm("AddorEditCourse", "App", FormMethod.Post, new { enctype = "multipart/form-data", onSubmit = "return CourseAdd(this);" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4> Add Course </h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.subCatID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.subCatID, new SelectList(Model.subCategoryList, "SubCategoryId", "name"), "Select Sub Category")
                @Html.ValidationMessageFor(model => model.subCatID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.userID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.userID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.userID, "", new { @class = "text-danger" })
            </div>
        </div>
 
        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.img, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="img" accept="image/*" onchange="showImagePreview(this, document.getElementById('courseImagePreview'))" />
                <img src="~/App_Files/Images/default.png" style="margin:10px" height="100" width="100" id="courseImagePreview" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script src="~/Scripts/SiteJs/ImagePreview.js"></script>

<script>
    function CourseAdd(form) {

        $.validator.unobtrusive.parse(form);

        if ($(form).valid) {

            if ($(form).attr('enctype') == "multipart/form-data") {
                contentType = false;
                processData = false;
            }

            $.ajax({
                type: 'POST',
                url: 'http://localhost:20503/api/Courses',
                data: new FormData(form),
                contentType: contentType,
                processData: processData,
                success: function (response) {
                    alertify.alert(" added successfully !!!")

                },
                error: function (response) {

                    alertify.alert("failed to add Category !!!")
                }

            });
        }
        return false;

    }


</script>

}
