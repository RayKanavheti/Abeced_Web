@model Abeced.UI.Web.Models.FactModel

@{
    ViewBag.Title = "AddorEditCard";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}
<link href="~/Content/chosen.min.css" rel="stylesheet" />
<style>
    .form-header {
        color: #fff;
        text-align: center;
        margin-top: -50px;
        margin-bottom: 10px;
        padding: 5px;
        /*padding:1em;*/
        border-radius: 2px;
    }

    
    textarea,input{
        max-width:none;
    }
    .deep-blue-gradient {
        background-image: linear-gradient(120deg, #e0c3fc 0%, #8ec5fc 100%);
    }
</style>

<div class="card" style="margin-top:55px">
    <div class="card-body">

        @using (Html.BeginForm("AddorEditCard", "App", FormMethod.Post, new { enctype = "multipart/form-data", onSubmit = "return jQueryAjaxPost(this);" }))
        {
            @Html.AntiForgeryToken()


            <div class="form-header deep-blue-gradient rounded">
                <h3 class="text-center">Add A Fact</h3>
            </div>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-row">
                <div class="form-group col-md-6">
                    <label for="courseID">Select Course</label>
                    @Html.DropDownListFor(model => model.courseID, new SelectList(Model.CourseList, "CourseId", "name"), "Select Course", new { id = "myDropdown" })
                    @Html.ValidationMessageFor(model => model.courseID, "", new { @class = "text-danger" })

                </div>
            </div>

                        <!--Grid Row-->
                        <div class="form-row">
                            <!--Grid Col-->
                            @*question text*@
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.question)
                                @Html.TextAreaFor(model => model.question, htmlAttributes: new { @class = "form-control md-textarea-auto", @placeholder = "Enter Question here", @rows = "2" })
                                @Html.ValidationMessageFor(model => model.question, "", new { @class = "text-danger" })
                            </div>
                            <!--/.Grid Col-->
                            <!-- Grid Col-->
                            @*question image*@
                            <div class="form-group col-md-4 text-center">
                                <label>Upload Question Image</label>
                                <input type="file" name="qImage" class="btn btn-blue-grey btn-sm" accept="image/jpeg, image/png, image/gif" onchange="showImagePreview(this, document.getElementById('qImagePreview1'))" />
                                <img src="~/App_Files/Images/books.jpg" class="img-thumbnail" style="margin:10px" height="100" width="100" id="qImagePreview1" />
                            </div>
                            <!--/.Grid Col-->
                            <!-- Grid Col-->
                            @*question audio*@

                            <div class="form-group col-md-4 text-center">
                                <label>Record Fact Question Audio</label><br />
                                <button type="button" class="btn btn-dark-green btn-sm" onclick="startRecording(this);">Start Recording</button>
                                <button type="button" class="btn btn-pink btn-sm" onclick="stopRecording(this);">Stop Recording</button>
                                <audio></audio>
                                <ul id="recordingslist"></ul>
                            </div>
                        </div>
                        <!--/. Grid Row -->


                        <!- Grid Row -->
                        <div class="form-row">
                            <!--Grid Column-->
                            <div class="form-group col-md-4">
                                @*Fact Answer*@
                                @Html.LabelFor(model => model.answer)
                                @Html.TextAreaFor(model => model.answer, htmlAttributes: new { @class = "form-control md-textarea-auto", @placeholder = "Enter Fact Answer here", @rows = "2" })
                                @Html.ValidationMessageFor(model => model.answer, "", new { @class = "text-danger" })
                            </div>
                            <!--/. Grid Column-->
                            <!--Grid Column-->
                            @*Answer Image *@
                            <div class="form-group col-md-4 text-center">
                                <label>Upload Answer Image</label>
                                <input type="file" name="aImage" class="btn btn-blue-grey btn-sm" accept="image/jpeg, image/png, image/gif" onchange="showImagePreview(this, document.getElementById('aImagePreview2'))" />
                                <img src="~/App_Files/Images/books.jpg" class="img-thumbnail" style="margin:10px" height="100" width="100" id="aImagePreview2" />
                            </div>
                            <!--/. Grid Column-->
                            <!--Grid Column-->
                            <div class="form-group col-md-4 text-center">
                                @*Answer Audio*@
                                <label>Record Fact Answer Audio </label><br />
                                <button type="button" class="btn btn-dark-green btn-sm" onclick="startRecording2(this);">Start Recording</button>
                                <button type="button" class="btn btn-pink btn-sm" onclick="stopRecording2(this);">Stop Recording</button>
                                <audio></audio>
                                <ul id="recordingslist2"></ul>
                            </div>
                            <!--Grid Column-->
                        </div>
                        <!--/. Grid Row-->

                    <!-- Grid Row-->
                                <div class="form-row ">
                                    <!--Grid Column-->
                                    <div class="form-group col-md-8">
                                        @*Fact Sheet*@
                                        @Html.LabelFor(model => model.factsheet)

                                        @Html.TextAreaFor(model => model.factsheet, htmlAttributes: new { @class = "form-control md-textarea-auto", @placeholder = "Enter Fact Sheet here", @rows = "2", @cols = "60" })
                                        @Html.ValidationMessageFor(model => model.factsheet, "", new { @class = "text-danger" })
                                    </div>
                                    <!--/. Grid Column-->
                                    <!-- Grid Column-->
                                    <div class="form-group col-md-4 text-center">
                                        @*Fact Sheet Audio*@
                                        <label>Record Fact Sheet Audio</label><br />
                                        <button type="button" class="btn btn-dark-green btn-sm" onclick="startRecording3(this);">Start Recording</button>
                                        <button type="button" class="btn btn-pink btn-sm" onclick="stopRecording3(this);">Stop Recording</button>
                                        <audio></audio>
                                        <ul id="recordingslist3"></ul>
                                    </div>
                                    <!--/. Grid Column-->

                                </div>
                    <!--/. Grid Row-->


                    <!-- Grid Row-->
                                <div class="form-row">
                                    <!--Grid Col-->
                                    <div class="form-group col-md-4">
                                        <label for="points">Points to be Earned</label>
                                        @Html.EditorFor(model => model.points, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.points, "", new { @class = "text-danger" })

                                    </div>
                                    <!--/. Grid Col-->
                                    <!-- Grid Col-->
                                    <div class="form-group col-md-4">
                                        @Html.LabelFor(model => model.flashcardRespTime)
                                        @Html.EditorFor(model => model.flashcardRespTime, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.flashcardRespTime, "", new { @class = "text-danger" })
                                    </div>
                                    <!--/. Grid Col-->
                                    <!--Grid Col-->
                                    <div class="form-group col-md-4">
                                        @Html.LabelFor(model => model.quizRespTime)
                                        @Html.EditorFor(model => model.quizRespTime, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.quizRespTime, "", new { @class = "text-danger" })
                                    </div>
                                    <!--/. Grid Col-->
                                </div>
                    <!--/. Grid Row -->
                                <div class="form-group">
                                    <div class="col-md-12 text-center">
                                        <input type="submit" value="Add Fact" class="btn btn-indigo btn-lg btn-block" />
                                    </div>
                                </div>

        }

    </div>

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/SiteJs/ImagePreview.js"></script>
    <script src="~/Scripts/SiteJs/recorder.js"></script>
    <script>
        var fileObject;
        var fileObject2;
        var fileObject3;

        //........ Recording One.............. //
        function startRecording(button) {
            recorder && recorder.record();
            button.disabled = true;
            button.nextElementSibling.disabled = false;
            __log('Recording...');
        }


        function stopRecording(button) {
            recorder && recorder.stop();
            button.disabled = true;
            button.previousElementSibling.disabled = false;
            __log('Stopped recording.');

            // create WAV download link using audio data blob
            createDownloadLink();

            recorder.clear();
        }
        
        function createDownloadLink() {
            console.log('trying to create download link');
            recorder && recorder.exportWAV(function (blob) {
                var url = URL.createObjectURL(blob);
                var li = document.createElement('li');
                var au = document.createElement('audio');
                var hf = document.createElement('a');

                au.controls = true;
                au.src = url;
                hf.href = url;
                hf.download = new Date().toTimeString() + '.mp3';
                hf.innerHTML = 'click to download..  ' + hf.download;
                li.appendChild(au);
                li.appendChild(hf);
                
                recordingslist.appendChild(li);
                console.log(li);
             
                blob.lastModifiedDate = new Date();
                fileObject = new File([blob], new Date().toTimeString() + '.mp3' , {
                    type: 'audio/mpeg'
                });

            });
        }
        //......... Recording One ...................//



        //........ Recording Two.............. //
        function startRecording2(button) {
            recorder && recorder.record();
            button.disabled = true;
            button.nextElementSibling.disabled = false;
            __log('Recording...');
        }

        function stopRecording2(button) {
            recorder && recorder.stop();
            button.disabled = true;
            button.previousElementSibling.disabled = false;
            __log('Stopped recording.');

            // create WAV download link using audio data blob
            createDownloadLink2();

            recorder.clear();
        }

        function createDownloadLink2() {
            console.log('trying to create download link');
            recorder && recorder.exportWAV(function (blob) {
                var url = URL.createObjectURL(blob);
                var li = document.createElement('li');
                var au = document.createElement('audio');
                var hf = document.createElement('a');

                au.controls = true;
                au.src = url;
                hf.href = url;
                hf.download = new Date().toTimeString() + '.mp3';
                hf.innerHTML = 'click to download..' + hf.download;
                li.appendChild(au);
                li.appendChild(hf);
                console.log(li);
                recordingslist2.appendChild(li);

                blob.lastModifiedDate = new Date();
                fileObject2 = new File([blob], new Date().toTimeString() + '.mp3', {
                    type: 'audio/mpeg'
                });

            });
        }


          //........ Recording Two.............. //





          //........ Recording Three.............. //

        function startRecording3(button) {
            recorder && recorder.record();
            button.disabled = true;
            button.nextElementSibling.disabled = false;
            __log('Recording...');
        }




        function stopRecording3(button) {
            recorder && recorder.stop();
            button.disabled = true;
            button.previousElementSibling.disabled = false;
            __log('Stopped recording.');

            // create WAV download link using audio data blob
            createDownloadLink3();

            recorder.clear();
        }


        function createDownloadLink3() {
            console.log('trying to create download link');
            recorder && recorder.exportWAV(function (blob) {
                var url = URL.createObjectURL(blob);
                var li = document.createElement('li');
                var au = document.createElement('audio');
                var hf = document.createElement('a');

                au.controls = true;
                au.src = url;
                hf.href = url;
                hf.download = new Date().toTimeString() + '.mp3';
                hf.innerHTML = 'click to download..' + hf.download;
                li.appendChild(au);
                li.appendChild(hf);
                console.log(li);
                recordingslist3.appendChild(li);

                blob.lastModifiedDate = new Date();
                fileObject3 = new File([blob], new Date().toTimeString() + '.mp3', {
                    type: 'audio/mpeg'
                });

            });
        }


        //................ Recording Three .............///



        function jQueryAjaxPost(form) {

        
            $.validator.unobtrusive.parse(form);
            
           
            if ($(form).valid) {
               
                if ($(form).attr('enctype') == "multipart/form-data") {
                    contentType = false;
                    processData = false;
                }
                var data = new FormData(form);
                data.append("qAudio", fileObject);
                data.append("aAudio", fileObject2);
                data.append("fsAudio", fileObject3);

               
                $.ajax({
                    type: 'POST',
              
                    url: 'http://localhost:20503/api/facts',
                    //data: new FormData().append("qAudio", fileObject),
                    data:data,
                   contentType: contentType,
                    processData: processData,
                    success: function (response) {
                        alertify.alert(" added successfully")

                    },
                    error: function (response) {

                        alertify.alert(" added failed")
                    }

                });
            }
            return false;

        }
    </script>
<script src="~/Scripts/chosen.jquery.min.js"></script>
    <script>
        $(document).ready(function () {

            $("#myDropdown").chosen({
                width: "100%"
               

            });
        });
    </script>
}
